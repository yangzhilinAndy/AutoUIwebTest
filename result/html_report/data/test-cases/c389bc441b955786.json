{"uid":"c389bc441b955786","name":"test_pictures[test_index005-\\u68c0\\u67e5\\u8f6e\\u64ad\\u56fe-\\u8f6e\\u64ad\\u56fe]","fullName":"testcase.test_index.TestIndex#test_pictures","historyId":"3b58bfaf25414326e628ba850d00f28d","time":{"start":1685177418936,"stop":1685177429502,"duration":10566},"description":"\n        检查首页轮播图与预览图是否一致\n        ","descriptionHtml":"<pre><code>    检查首页轮播图与预览图是否一致\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x0000000109bec598 chromedriver + 4973976\n1   chromedriver                        0x0000000109be3913 chromedriver + 4938003\n2   chromedriver                        0x00000001097a0cd6 chromedriver + 470230\n3   chromedriver                        0x00000001097e42ff chromedriver + 746239\n4   chromedriver                        0x00000001097e4591 chromedriver + 746897\n5   chromedriver                        0x0000000109826384 chromedriver + 1016708\n6   chromedriver                        0x00000001098089ed chromedriver + 895469\n7   chromedriver                        0x0000000109823856 chromedriver + 1005654\n8   chromedriver                        0x0000000109808793 chromedriver + 894867\n9   chromedriver                        0x00000001097d621f chromedriver + 688671\n10  chromedriver                        0x00000001097d756e chromedriver + 693614\n11  chromedriver                        0x0000000109ba6bb7 chromedriver + 4688823\n12  chromedriver                        0x0000000109baba51 chromedriver + 4708945\n13  chromedriver                        0x0000000109bb240f chromedriver + 4736015\n14  chromedriver                        0x0000000109bac91a chromedriver + 4712730\n15  chromedriver                        0x0000000109b7f87c chromedriver + 4528252\n16  chromedriver                        0x0000000109bcbf28 chromedriver + 4841256\n17  chromedriver                        0x0000000109bcc0a7 chromedriver + 4841639\n18  chromedriver                        0x0000000109bdd28f chromedriver + 4911759\n19  libsystem_pthread.dylib             0x00007ff81d63e4e1 _pthread_start + 125\n20  libsystem_pthread.dylib             0x00007ff81d639f6b thread_start + 15","statusTrace":"self = <testcase.test_index.TestIndex object at 0x10ed6c550>\npo = <page.indexPage.Index object at 0x10ed94d10>, caseId = 'test_index005'\ndetail = '检查轮播图', screen = '轮播图'\n\n    @pytest.mark.parametrize(\"caseId, detail, screen\", [reader.get_test_data(4)])\n    def test_pictures(self, po, caseId, detail, screen):\n        \"\"\"\n        检查首页轮播图与预览图是否一致\n        \"\"\"\n        self.log.info(\"执行测试用例ID-> {0} ; 测试点-> {1}\".format(caseId, detail))\n>       po.check_pictures()\n\ntestcase/test_index.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage/indexPage.py:65: in check_pictures\n    links = self.find_element(*self.pictures).find_elements(By.XPATH, './a')\npage/base.py:47: in find_element\n    WebDriverWait(self.driver, self.timeout).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"421b4e0dc59f28c60c697cd13a60d94e\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x10edb96c0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000109bec598 chromedriver + 4973976\nE       1   chromedriver                        0x0000000109be3913 chromedriver + 4938003\nE       2   chromedriver                        0x00000001097a0cd6 chromedriver + 470230\nE       3   chromedriver                        0x00000001097e42ff chromedriver + 746239\nE       4   chromedriver                        0x00000001097e4591 chromedriver + 746897\nE       5   chromedriver                        0x0000000109826384 chromedriver + 1016708\nE       6   chromedriver                        0x00000001098089ed chromedriver + 895469\nE       7   chromedriver                        0x0000000109823856 chromedriver + 1005654\nE       8   chromedriver                        0x0000000109808793 chromedriver + 894867\nE       9   chromedriver                        0x00000001097d621f chromedriver + 688671\nE       10  chromedriver                        0x00000001097d756e chromedriver + 693614\nE       11  chromedriver                        0x0000000109ba6bb7 chromedriver + 4688823\nE       12  chromedriver                        0x0000000109baba51 chromedriver + 4708945\nE       13  chromedriver                        0x0000000109bb240f chromedriver + 4736015\nE       14  chromedriver                        0x0000000109bac91a chromedriver + 4712730\nE       15  chromedriver                        0x0000000109b7f87c chromedriver + 4528252\nE       16  chromedriver                        0x0000000109bcbf28 chromedriver + 4841256\nE       17  chromedriver                        0x0000000109bcc0a7 chromedriver + 4841639\nE       18  chromedriver                        0x0000000109bdd28f chromedriver + 4911759\nE       19  libsystem_pthread.dylib             0x00007ff81d63e4e1 _pthread_start + 125\nE       20  libsystem_pthread.dylib             0x00007ff81d639f6b thread_start + 15\n\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1685177398085,"stop":1685177398085,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver","time":{"start":1685177398085,"stop":1685177400057,"duration":1972},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"po","time":{"start":1685177400057,"stop":1685177402474,"duration":2417},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"\n        检查首页轮播图与预览图是否一致\n        ","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x0000000109bec598 chromedriver + 4973976\n1   chromedriver                        0x0000000109be3913 chromedriver + 4938003\n2   chromedriver                        0x00000001097a0cd6 chromedriver + 470230\n3   chromedriver                        0x00000001097e42ff chromedriver + 746239\n4   chromedriver                        0x00000001097e4591 chromedriver + 746897\n5   chromedriver                        0x0000000109826384 chromedriver + 1016708\n6   chromedriver                        0x00000001098089ed chromedriver + 895469\n7   chromedriver                        0x0000000109823856 chromedriver + 1005654\n8   chromedriver                        0x0000000109808793 chromedriver + 894867\n9   chromedriver                        0x00000001097d621f chromedriver + 688671\n10  chromedriver                        0x00000001097d756e chromedriver + 693614\n11  chromedriver                        0x0000000109ba6bb7 chromedriver + 4688823\n12  chromedriver                        0x0000000109baba51 chromedriver + 4708945\n13  chromedriver                        0x0000000109bb240f chromedriver + 4736015\n14  chromedriver                        0x0000000109bac91a chromedriver + 4712730\n15  chromedriver                        0x0000000109b7f87c chromedriver + 4528252\n16  chromedriver                        0x0000000109bcbf28 chromedriver + 4841256\n17  chromedriver                        0x0000000109bcc0a7 chromedriver + 4841639\n18  chromedriver                        0x0000000109bdd28f chromedriver + 4911759\n19  libsystem_pthread.dylib             0x00007ff81d63e4e1 _pthread_start + 125\n20  libsystem_pthread.dylib             0x00007ff81d639f6b thread_start + 15","statusTrace":"self = <testcase.test_index.TestIndex object at 0x10ed6c550>\npo = <page.indexPage.Index object at 0x10ed94d10>, caseId = 'test_index005'\ndetail = '检查轮播图', screen = '轮播图'\n\n    @pytest.mark.parametrize(\"caseId, detail, screen\", [reader.get_test_data(4)])\n    def test_pictures(self, po, caseId, detail, screen):\n        \"\"\"\n        检查首页轮播图与预览图是否一致\n        \"\"\"\n        self.log.info(\"执行测试用例ID-> {0} ; 测试点-> {1}\".format(caseId, detail))\n>       po.check_pictures()\n\ntestcase/test_index.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage/indexPage.py:65: in check_pictures\n    links = self.find_element(*self.pictures).find_elements(By.XPATH, './a')\npage/base.py:47: in find_element\n    WebDriverWait(self.driver, self.timeout).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"421b4e0dc59f28c60c697cd13a60d94e\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x10edb96c0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000109bec598 chromedriver + 4973976\nE       1   chromedriver                        0x0000000109be3913 chromedriver + 4938003\nE       2   chromedriver                        0x00000001097a0cd6 chromedriver + 470230\nE       3   chromedriver                        0x00000001097e42ff chromedriver + 746239\nE       4   chromedriver                        0x00000001097e4591 chromedriver + 746897\nE       5   chromedriver                        0x0000000109826384 chromedriver + 1016708\nE       6   chromedriver                        0x00000001098089ed chromedriver + 895469\nE       7   chromedriver                        0x0000000109823856 chromedriver + 1005654\nE       8   chromedriver                        0x0000000109808793 chromedriver + 894867\nE       9   chromedriver                        0x00000001097d621f chromedriver + 688671\nE       10  chromedriver                        0x00000001097d756e chromedriver + 693614\nE       11  chromedriver                        0x0000000109ba6bb7 chromedriver + 4688823\nE       12  chromedriver                        0x0000000109baba51 chromedriver + 4708945\nE       13  chromedriver                        0x0000000109bb240f chromedriver + 4736015\nE       14  chromedriver                        0x0000000109bac91a chromedriver + 4712730\nE       15  chromedriver                        0x0000000109b7f87c chromedriver + 4528252\nE       16  chromedriver                        0x0000000109bcbf28 chromedriver + 4841256\nE       17  chromedriver                        0x0000000109bcc0a7 chromedriver + 4841639\nE       18  chromedriver                        0x0000000109bdd28f chromedriver + 4911759\nE       19  libsystem_pthread.dylib             0x00007ff81d63e4e1 _pthread_start + 125\nE       20  libsystem_pthread.dylib             0x00007ff81d639f6b thread_start + 15\n\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[],"attachments":[{"uid":"96fdf64799c7b136","name":"log","source":"96fdf64799c7b136.txt","type":"text/plain","size":3392}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"po::0","time":{"start":1685177429544,"stop":1685177429544,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver::0","time":{"start":1685177429545,"stop":1685177429644,"duration":99},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"testcase"},{"name":"suite","value":"test_index"},{"name":"subSuite","value":"TestIndex"},{"name":"host","value":"bogon"},{"name":"thread","value":"29266-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.test_index"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"caseId","value":"'test_index005'"},{"name":"detail","value":"'检查轮播图'"},{"name":"screen","value":"'轮播图'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c389bc441b955786.json","parameterValues":["'test_index005'","'检查轮播图'","'轮播图'"]}